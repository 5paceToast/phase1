pkgname=libcxx

pkgver=9.0.1
pkgrel=3
pkgdesc="$pkgname"
arch="all"
url=.
license=.

source="https://github.com/llvm/llvm-project/archive/llvmorg-$pkgver.tar.gz
	musl.patch
	libunwind_riscv.patch"
subpackages="$pkgname-dev"

builddir="$srcdir/llvm-project-llvmorg-$pkgver"
_builddir="$srcdir/build"

makedepends="cmake clang lld ninja llvm-dev linux-dev python3"

provides="so:libgcc_s.so.1"

prepare() {
	default_prepare
	mkdir -p $_builddir && cd $_builddir

	cmake -G Ninja -Wno-dev \
			-DCMAKE_C_COMPILER=$CC \
			-DCMAKE_CXX_COMPILER=$CXX \
			-DCMAKE_C_COMPILER_TARGET=$CTARGET \
			-DCMAKE_CXX_COMPILER_TARGET=$CTARGET \
			-DCMAKE_C_FLAGS="$CFLAGS" \
			-DCMAKE_CXX_FLAGS="$CXXFLAGS" \
			-DCMAKE_INSTALL_PREFIX=/usr \
			-DCMAKE_BUILD_TYPE=Release \
			-DLLVM_ENABLE_PROJECTS="libunwind;libcxxabi;libcxx" \
			-DLIBCXX_USE_COMPILER_RT=ON \
			-DLIBCXX_HAS_MUSL_LIBC=ON \
			-DLIBCXX_ENABLE_STATIC_ABI_LIBRARY=ON \
			-DLIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY=ON \
			-DLIBCXX_STATICALLY_LINK_ABI_IN_STATIC_LIBRARY=ON \
			-DLIBCXXABI_USE_COMPILER_RT=ON \
			-DLIBCXXABI_USE_LLVM_UNWINDER=ON \
			-DLIBCXXABI_ENABLE_STATIC_UNWINDER=ON \
			-DLIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY=YES \
			$builddir/llvm
}

build() {
	cd $_builddir
	ninja -j${JOBS} cxx
}

package() {
	cd $_builddir
	DESTDIR="$pkgdir" ninja install-libcxx-headers install-libcxx install-unwind
}

b2sums="b86e405f2b8e00436045fd409fe19cdde75c797b1192c62a22b5ec75e6b4dc8e874a0f33008dc31562445e4cbe53a992b6f48c684255a6a1ef261e595b8b161f  llvmorg-9.0.1.tar.gz
4ac74027fdfe0def3a1601df2f65ad1a8fe47e41cfa4df2065863288a5ebe65057a5c4d0791bf817d8dfab923d0bc39d804e968bd3a90ed3f6720d2fbf1734aa  musl.patch
3d72d237b9ed5244bee37d366bc06750fc9265c18598939a2169c6e322f93fe2e7edcfa553039a7043f744aecc2c1787b9b0b3818f0ee8a71758b6bec18c2791  libunwind_riscv.patch"
